@page "/profile"
@using APIServiceLayer.Models


<MudContainer Style="max-width: 800px" Class="my-5">
    <MudPaper Style="overflow:hidden; position:relative;">
        <MudDrawerContainer Class="mud-height-full">
            <MudDrawer @bind-Open="_open" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
                <MudNavMenu>
                    <MudNavLink 
                        OnClick="() => NavigationPageChanged(Pages.Profile)"
                        Class="pt-5"
                        Match="NavLinkMatch.All"
                        IconColor="Color.Dark"
                        Icon="@Icons.Material.Filled.Person">
                        Profile data
                    </MudNavLink>
                    <MudNavLink 
                        OnClick="() => NavigationPageChanged(Pages.Statistic)"
                        Class="pt-5"
                        Match="NavLinkMatch.All"
                        IconColor="Color.Dark"
                        Icon="@Icons.Material.Filled.QueryStats">
                        Statistics
                    </MudNavLink>
                </MudNavMenu>
            </MudDrawer>

            <div>
                @switch (_activePage)
                {
                    case Pages.Profile:
                        <ProfileAndUpdatePass/>
                        break;
                    case Pages.Statistic:
                        <Statistics />
                        break;
                }
            </div>

        </MudDrawerContainer>
    </MudPaper>
</MudContainer>




@code
{
    bool _open = false;

    Pages _activePage = Pages.Profile;



    private void NavigationPageChanged(Pages page)
    {
        _activePage = page;
    }

    private bool IsPage(Pages page) => _activePage == page;

    private enum Pages
    {
        Profile,
        Statistic
    }
}